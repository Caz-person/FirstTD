//
//  Map.swift
//  world Of Traps
//
//  Created by Rebecca Cullimore on 5/30/16.
//  Copyright Â© 2016 Cullimore Family. All rights reserved.
//


class Map {
    func mapOne() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return
([["path","path","path","path","path","path","path","path","path", "path","","","","","","","","",""], ["","","","","","","","","","path","","","","","","","","",""],["","","","","","","","","","path","","","","","","","","",""],["","","","","","","","","","path","","","","","","","","",""],["","","","","","","","","","path","","","","","","","","",""],["water","","","","","","","","","path","","","","","","","","",""],["water","","","","","","","","","path","","","","","","","","",""],["water","","","","","","","","","path","","","","","","","","",""],["","","","","","","","","","path","","","","","","","","",""],["","","","","","","","","","path","","","","","","","","",""],["","","","","","","","","","path","","","","","","","","",""],["","","","","","","","","","path","","","","","","","","",""],["path","path","path","path","path","path","path","path","path","path","","","","","","","","",""]], 21, ["mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","" ,"" ,"" ,"" ,"" ,"" ,"mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","" ,"" ,"" ,"" ,"" ,"" ,"fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy", "fastEnemy","" ,"" ,"" ,"" ,"" ,"" ,"" ,"" ,"" ,"" ,"" ,"" ,"" ,"mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy"], 2)//[["horizontal","horizontal","horizontal","horizontal","horizontal","horizontal","horizontal","horizontal","horizontal", "leftDown","","","","","","","","","","","","","","","","","",""], ["vertical", "","","","","","","","","","","","","","","","","","",""],["vertical", "","","","","","","","","","","","","","","","","","",""],["vertical", "","","","","","","","","","","","","","","","","","","","rightUP","horizontal","horizontal","horizontal","horizontal","horizontal", "leftUp"], ["vertical", "vertical", "vertical", "rightDown", "horizontal", "horizontal", "horizontal", "horizontal"]]
    }
    func mapTwo() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return ([["path", "path", "path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "path", "path", "path", "path", "path", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "", "", "", "path", "path", "path", "path", "path", "", "", "", "", "", ""], ["", "", "", "", "", "", "", "", "", "", "", "", "path", "path", "", "", "", "", ""], ["", "", "", "", "", "", "", "", "", "", "", "", "", "path", "path", "", "", "", ""], ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "path", "", "", "", ""], ["", "", "", "", "", "", "", "", "", "", "", "", "", "path", "path", "", "", "", ""], ["", "", "", "", "", "", "", "", "", "", "", "path", "path", "path", "", "", "", "", ""], ["", "", "", "", "", "", "path", "path", "path", "path", "path", "path", "", "", "", "", "", "", ""], ["", "", "", "", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["path", "path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]], 37,["mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "", "", "", "", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "", "", "", "", "", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "", "", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "", "", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "bossEnemy"], 3)
    }
    func mapThree() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return
            ([["path","path","path","path","path","path","path","path","path", "path","","","","","","","","",""], ["","","","","","","","","","path","","","","","","","","",""],["","","","","","","","","","path","","","","","","","","",""],["water","","","","","","","","","path","","","","","","","","",""],["water","","","path","path","path","path","path","path","path","","","","","","","","",""],["water","","","path","","","","","","","","","","","","","","",""],["water","","","path","","","","","","","","","","","","","","",""],["water","","","path","","","","","","","","","","","","","","",""],["water","","","path","path","path","path","path","path","path","","","","","","","","",""],["water","","","","","","","","","path","","","","","","","","",""],["","","","","","","","","","path","","","","","","","","",""],["","","","","","","","","","path","","","","","","","","",""],["path","path","path","path","path","path","path","path","path","path","","","","","","","","",""]], 33, ["mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy", "", "", "","","","","","","","" ,"mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy", "","","","","","","","", "", "" ,"mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy", "","","","","","","","", "", "" ,"fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy", "", "", "" ,"slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","","", "","","","","","","","", "", "", "","","","","","","","", "", "" , "","","","","","","","", "", "" , "","","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy", "", "", "" ,"slowEnemy","slowEnemy","slowEnemy", "", "", "" ,"slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy" , "", "mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy"], 4)
    }
    func mapFour() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return ([["path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]], 22  , ["fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy","fastEnemy", "fastEnemy", "", "", "", "", "", "", "", "", "", "", "", "", "", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "", "", "", "", "", "", "", "", "", "", "", "", "","fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "", "", "", "", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "fastEnemy", "mediumEnemy", "slowEnemy", "mediumEnemy", "fastEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "mediumEnemy", "mediumEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "", "", "", "", "", "bossEnemy"], 5)
    }
    
    func mapFive() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return
            ([["path","path","path","path","","","","","", "","","","","","","","","",""], ["","","","path","","","","","","","","","","","","","","",""],["water","","","path","","","","","","","","","","","","","","",""],["water","","","path","","","","","","","","","","","","","","",""],["","","","path","","","","","","","","","","","","","","",""],["path","path","path","path","","water","","","","","","","","","","","","",""],["path","","","","","","","","","water","","","","","","","","",""],["path","","","","","","","","","","","","","","","","","",""],["path","path","path","path","path","path","path","path","path","path","","","","","","","","",""],["","","","","","","","","","path","","","","","","","","",""],["water","water","water","","","","","","","path","","","","","","","","",""],["","","","","","","","","","path","","","","","","","","",""],["path","path","path","path","path","path","path","path","path","path","","","","","","","","",""]], 27, ["mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy", "", "", "","","","","","","","", "fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","mediumEnemy","","","","","","","","","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy", "","","","","","","","", "", "" ,"mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy", "","","","","","","","", "", "" ,"fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy", "fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy", "", "", "" ,"slowEnemy","slowEnemy","slowEnemy", "slowEnemy","slowEnemy", "slowEnemy","slowEnemy", "slowEnemy","slowEnemy","slowEnemy","","","","","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy", "", "", "" ,"slowEnemy","slowEnemy","slowEnemy", "", "", "", "mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy"], 6)
    }
    func mapSix() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return ([["path", "path", "path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "path", "path", "path", "path", "", "path", "path", "path", "path", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "path", "", "path", "", "", "path", "path", "path", "path", "path", "path", "path", "", ""], ["", "", "", "", "", "path", "path", "path", "", "", "", "", "", "", "", "", "path", "", ""], ["", "", "", "", "", "", "", "", "", "", "path", "path", "path", "path", "path", "path", "path", "", ""], ["", "", "path", "path", "path", "", "", "", "path", "path", "path", "", "", "", "", "", "", "", ""], ["", "", "path", "", "path", "", "path", "path", "path", "", "", "", "", "", "", "", "", "", ""], ["", "", "path", "", "path", "", "path", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "path", "", "path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", ""], ["path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]], 56, ["mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "", "", "", "", "", "", "", "", "", "", "", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "", "", "", "fastEnemy", "fastEnemy", "fastEnemy","", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy","", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "", "", "", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "", "", "", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "", "", "", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "", "", "", "slowEnemy", "slowEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy","", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "", "", "", "", "", "", "", "", "", "", "", "","fastEnemy", "fastEnemy", "fastEnemy","fastEnemy", "fastEnemy", "fastEnemy","fastEnemy", "fastEnemy", "fastEnemy","fastEnemy", "fastEnemy", "fastEnemy","fastEnemy", "fastEnemy", "fastEnemy","mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "", "", "", "", "", "", "", "", "", "", "", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "", "", "", "", "", "", "", "", "", "", "", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "bossEnemy" ], 7)
    }
    
    func mapSeven() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return ([["path","path","path","path","path","path","path","path","path","path","","","","","","","","",""], ["","","","","","","","","","path","","","","","","","","",""],["","","path","path","path","path","","","","path","","","","","","","","",""],["","","path","","","path","","","","path","","","","","","","","",""],["","","path","","","path","","","","path","","","","","","","","",""],["","","path","","","path","","","","path","","","","","","","","",""],["","","path","","","path","","","","path","","","","","","","","",""],["","","path","","","path","","","","path","","","","","","","","",""],["","","path","","","path","","","","path","","","","","","","","",""],["","","path","","","path","","","","path","","","","","","","","",""],["","","path","","","path","","","","path","","","","","","","","",""],["","","path","","","path","","","","path","","","","","","","","",""],["path","path","path","","","path","path","path","path","path","","","","","","","","",""]], 42, ["mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy", "", "", "","","","","","","","","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","mediumEnemy","","","","","","","","","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","","","","","","","","","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","mediumEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","mediumEnemy","","","","","","","","","slowEnemy","slowEnemy","slowEnemy","","","","","","","","","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","","","","","","","","","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","","","","","","","","","","","","","","","","","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy"], 8)
    }
    func mapEight() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return ([["path","path","path","path","","","","","","","","","","","","","","",""], ["","","","path","","","","","","","","","","","","","","",""],["","","","path","","","","","","","","","","","","","","",""],["","","","path","path","path","","","", "","","","","","","","","",""],["","","","","","path","","","","","","","","","","","","",""],["water","","","","","path","","","","","","","","","","","","",""],["water","","","","","path","path","path","","","","","","","","","","",""],["water","","","","","","","path","","","","","","","","","","",""],["water","","","","","","","path","","","","","","","","","","",""],["water","water","","","","","","path","path","path","","","","","","","","",""],["","","","","","","","","","path","","","","","","","","",""],["","","","","","","","","","path","","","","","","","","",""],["path","path","path","path","path","path","path","path","path","path","","","","","","","","",""]], 21, ["mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","","","","","","","","","","","","","","","","","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","","","","","","","","","","","","","","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy", "","slowEnemy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","","","","","","","","","","","","","","","","","","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","","","","","","","","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","","","","","","","","","","","","","","","","","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","","","","","","","","","","","","","","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy", "","slowEnemy","","","","","","","","","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","","","","","","","","","","","","","","","","","","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","","","","","","","","","","","","", "slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","fastEnemy","","","","","","","","","","","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy", "bossEnemy"], 9)
    }
    func mapNine() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return ([["path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "", "path", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "", "path", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "", "path", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]], 22, ["mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","","","","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","","","","","","","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","","","","","","","","","","","","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","","","","","","","","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","","","","","slowEnemy","slowEnemy","slowEnemy","slowEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","","","","","","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy","slowEnemy",], 10)
        
        
    }
    
    func mapTen() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return ([["path", "path", "path", "path", "", "path", "path", "path", "path", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "path", "", "path", "", "", "path", "path", "path", "path", "path", "", "", "", "", "", ""], ["", "", "", "path", "path", "path", "", "", "", "", "", "", "path", "path", "path", "path", "path", "path", "path"], ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "path"], ["path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path"], ["path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path"], ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "path"], ["path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path"], ["path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path"], ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "path"], ["path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path"]],87,["fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "", "", "", "", "", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy"], 11)
    }
    func mapEleven() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return ([["path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "", "", "", "", ""], ["", "", "", "", "", "", "", "", "", "", "", "", "", "path", "", "", "", "", ""], ["", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "", "", "", "", ""], ["", "path", "", "", "", "", "", "", "", "", "", "", "", "", "path", "path", "path", "", ""], ["", "path", "", "path", "path", "path", "path", "path", "", "", "", "", "", "path", "path", "", "path", "path", ""], ["", "path", "path", "path", "", "", "", "path", "path", "", "", "", "path", "path", "", "", "", "path", "path"], ["", "", "", "", "", "", "", "", "path", "path", "path", "path", "path", "", "", "", "", "", "path"], ["", "", "", "", "", "path", "path", "path", "", "", "", "", "", "", "", "", "", "path", "path"], ["", "", "", "", "path", "path", "", "path", "path", "", "", "", "", "", "", "", "path", "path", ""], ["", "", "", "path", "path", "", "", "", "path", "path", "", "", "", "", "", "path", "path", "", ""], ["", "", "path", "path", "", "", "", "", "", "path", "path", "", "", "", "path", "path", "", "", ""], ["", "path", "path", "", "", "", "", "", "", "", "path", "path", "", "path", "path", "", "", "", ""], ["path", "path", "", "", "", "", "", "", "", "", "", "path", "path", "path", "", "", "", "", ""]], 81, ["fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "", "", "", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "", "", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "", "", "", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy"], 11)
    }
    func mapTwelve() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return ([["path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "path", "path", "path", "path", "path", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "", "", "path", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "", "path", "path", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]], 25,["mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy","mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy","slowEnemy", "", "", "", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "", "", "", "", "", "", "", "", "", "", "", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "", "", "", "", "", "", "", "", "", "", "", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "", "", "", "", "", "", "", "", "", "", "", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "", "", "", "", "", "", "", "", "", "", "", "", "fastEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "", "fastEnemy"], 11)
    }
    func mapThirteen() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return ([["path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path"], ["path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path"], ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "path", "path"], ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "path", "path"], ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "path", "path"], ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "path", "path"], ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "path", "path"], ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "path", "path"], ["", "", "", "", "", "", "", "", "path", "path", "path", "path", "", "", "", "", "", "path", "path"], ["", "", "", "", "", "", "", "", "path", "path", "path", "path", "", "", "", "", "", "path", "path"], ["", "", "", "", "", "", "", "", "path", "path", "", "", "", "", "", "", "", "path", "path"], ["path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path"], ["path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path", "path"]],79,["fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy"], 9)
    }
    func map14() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return
            ([["path","path","path","path","path","path","path","path","path", "path","path","path","path","path","path","path","path","path","path"], ["","","","","","","","","","","","","","","","","","","path"],["","","","","","","","","","","","","","","","","","","path"],["path","path","path","path","path","path","path","path","path", "path","path","path","path","path","path","path","path","path","path"],["path","","","","","","","","","","","","","","","","","",""],["path","","","water","water","water","water","water","water","","","","","","","","","",""],["path","","","","","","","","","","","","","","","","","",""],["path","","","","","","","","","","","","","","","","","",""],["path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path"],["","","","","","","","","","","","","","","","","","","path"],["","","","","","","","water","water","water","water","water","water","water","water","water","","","path"],["","","","","","","","","","","","","","","","","","","path"],["path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path"]], 66, ["mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy", "", "", "","","","","","","","", "fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy","mediumEnemy","","","","","","","","","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy", "","","","","","","","", "", "" ,"mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy", "","","","","","","","", "", "" ,"fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy", "fastEnemy","fastEnemy","fastEnemy","fastEnemy","fastEnemy", "", "", "" ,"slowEnemy", "","slowEnemy", "","slowEnemy", "","slowEnemy", "","slowEnemy", "","slowEnemy", "","slowEnemy", "", "slowEnemy","slowEnemy","slowEnemy","","","","","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy", "", "", "" ,"slowEnemy","slowEnemy","slowEnemy", "", "", "", "mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "fastEnemy","mediumEnemy", "","","","","","","","","","","","","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy","mediumEnemy", "","","","","","","","", "","slowEnemy", "", "slowEnemy","slowEnemy","slowEnemy","slowEnemy", "", "slowEnemy","slowEnemy","slowEnemy","slowEnemy", "", "slowEnemy","slowEnemy","slowEnemy","slowEnemy", "", "slowEnemy","slowEnemy","slowEnemy","slowEnemy", "", "slowEnemy","slowEnemy","slowEnemy"], 11)
    }
    func map15() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return ([["path", "path", "water", "water", "water", "water", "water", "water", "water", "water", "water", "water", "water", "water", "water", "water", "water", "water", "water"], ["water", "path", "path", "path", "water", "path", "path", "path", "water", "path", "path", "path", "water", "path", "path", "path", "path", "path", "water"], ["", "", "", "path", "path", "path", "", "path", "path", "path", "", "path", "path", "path", "", "", "", "path", "water"], ["", "", "water", "", "", "", "water", "", "", "", "water", "", "", "water", "", "", "", "path", "water"], ["", "", "", "", "", "", "", "", "", "", "water", "", "", "", "water", "", "water", "path", "water"], ["", "", "", "", "", "", "", "water", "path", "path", "path", "path", "path", "path", "", "", "", "path", "water"], ["", "", "", "", "", "path", "path", "path", "path", "water", "water", "water", "water", "path", "", "", "", "path", "water"], ["", "", "", "", "water", "path", "water", "water", "water", "water", "", "", "water", "path", "", "", "", "path", "water"], ["", "", "", "", "", "path", "water", "", "", "", "", "", "water", "path", "water", "", "water", "path", "water"], ["", "", "", "", "", "path", "water", "", "", "", "", "", "water", "path", "", "", "", "path", "water"], ["water", "", "", "water", "path", "path", "water", "", "", "", "", "", "water", "path", "", "", "", "path", "water"], ["path", "path", "path", "path", "path", "water", "", "", "", "", "", "", "water", "path", "path", "path", "path", "path", "water"], ["water", "water", "water", "water", "water", "", "", "", "", "", "", "", "water", "water", "water", "water", "water", "water", "water"]],
            54,
            ["mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "fastEnemy", "mediumEnemy", "slowEnemy", "mediumEnemy", "fastEnemy", "mediumEnemy", "slowEnemy", "mediumEnemy", "fastEnemy", "mediumEnemy", "slowEnemy", "mediumEnemy", "fastEnemy", "mediumEnemy", "slowEnemy", "mediumEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "", "", "", "", "", "fastEnemy", "fastEnemy", "slowEnemy", "slowEnemy", "", "fastEnemy", "mediumEnemy", "slowEnemy", "", "", "", "fastEnemy", "", "fastEnemy", "", "fastEnemy", "", "fastEnemy", "", "fastEnemy", "fastEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "slowEnemy", "", "fastEnemy", "", "fastEnemy", "", "fastEnemy", "", "fastEnemy", "", "fastEnemy", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "","","","","", "bossEnemy"], 11)
    }
    func map20() -> (template: [[String]], startIndex: Int, waves: [String], reward: Int) {
        return([["path", "path", "path", "path", "path", "path", "path", "path", "", "", "", "", "", "", "", "", "", "", ""], ["water", "", "water", "", "", "", "", "path", "", "", "", "", "", "", "", "", "", "", ""], ["water", "", "water", "", "", "", "", "path", "", "", "", "", "", "", "", "", "", "", ""], ["water", "", "water", "", "", "", "", "path", "", "", "", "", "", "", "", "", "", "", ""], ["water", "", "water", "", "", "", "", "path", "", "", "", "", "", "", "", "", "", "", ""], ["water", "", "water", "", "", "", "", "path", "water", "water", "water", "water", "water", "water", "water", "water", "water", "", ""], ["water", "", "water", "", "", "", "path", "path", "water", "water", "water", "water", "water", "water", "water", "water", "water", "", ""], ["water", "", "water", "", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", ""], ["water", "", "water", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["", "", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["path", "path", "path", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]],24,["", "","", "","", "","", "","", "","", "","", "", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "fastEnemy","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "fastEnemy","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "mediumEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "", "", "", "", "", "", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "slowEnemy", "mediumEnemy", "mediumEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "mediumEnemy", "mediumEnemy", "fastEnemy", "mediumEnemy", "slowEnemy", "fastEnemy", "mediumEnemy", "fastEnemy", "slowEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "fastEnemy", "slowEnemy", "slowEnemy", "fastEnemy", "slowEnemy", "slowEnemy", "fastEnemy", "fastEnemy", "fastEnemy", "slowEnemy", "mediumEnemy", "mediumEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "mediumEnemy", "mediumEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "mediumEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "mediumEnemy", "mediumEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "slowEnemy", "mediumEnemy", "fastEnemy", "fastEnemy", "mediumEnemy", "mediumEnemy", "slowEnemy", "slowEnemy"], 11)
    }
    
    
}




//   empty Map
